=begin comment

DaDaPush Public API

DaDaPush: Real-time Notifications App Send real-time notifications through our API without coding and maintaining your own app for iOS or Android devices.

The version of the OpenAPI document: v1
Contact: contacts@dadapush.com
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More tests => 2; #TODO update number of test cases
use Test::Exception;

use lib 'lib';
use strict;
use warnings;
use DaDaPushClient::Configuration;
use DaDaPushClient::DaDaPushMessageApi;
use DaDaPushClient::Object::Action;
use DaDaPushClient::Object::MessagePushRequest;
use DaDaPushClient::Object::ResultOfMessagePushResponse;

use_ok('DaDaPushClient::DaDaPushMessageApi');

my $config = DaDaPushClient::Configuration->new(
    base_url => "http://127.0.0.1:8080"
);
my $apiClient = DaDaPushClient::ApiClient->new($config);
my $api = DaDaPushClient::DaDaPushMessageApi->new($apiClient);
my $channel_token = "ctb3lwO6AeiZOwqZgp8BE8980FdNgp0cp6MCf";
isa_ok($api, 'DaDaPushClient::DaDaPushMessageApi');

#
# create_message test
#
{
    my $action = DaDaPushClient::Object::Action->new("name" => "view", "type" => "link", "url" => "https://www.dadapush.com/");
    # $action->name = "view";
    # $action->type = "link";
    # $action->url = "https://www.dadapush.com/";
    my $body = DaDaPushClient::Object::MessagePushRequest->new(
        "title"    => "Good News!",
        "content"  => "Good News! DaDaPush releasing new version",
        "needPush" => "true",
        "actions"  => [ $action ]
    );
    # $body->title = "Good News!";
    # $body->content = "Good News! DaDaPush releasing new version";
    # $body->needPush = "true";
    # $body->actions = [ $action ];

    my $result = $api->create_message(body => $body, channel_token => $channel_token);
    print "$result->{code}\n";
    print "$result->{data}->{message_id}\n";
}

#
# delete_message test
#
# {
#     my $message_id=>227894;
#     my $result = $api->delete_message(message_id => $message_id, channel_token => $channel_token);
#     print "$result->{code}\n";
# }

#
# get_message test
#
# {
#     my $message_id = undef;
#     my $x_channel_token = undef;
#     my $result = $api->get_message(message_id => $message_id, x_channel_token => $x_channel_token );
# }

#
# get_messages test
#
# {
#     my $page = undef;
#     my $page_size = undef;
#     my $x_channel_token = undef;
#     my $result = $api->get_messages({ page => $page, page_size => $page_size, x_channel_token => $x_channel_token });
# }


1;
